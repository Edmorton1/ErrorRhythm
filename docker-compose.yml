services:
  client:
    image: rhythm_game-client:latest
    build:
      context: ./
      dockerfile: Dockerfile.client
    env_file:
      - .env
    ports:
      - "5000:80"
    depends_on:
      - server
  server:
    image: rhythm-game_server:latest
    build:
      context: ./
      dockerfile: Dockerfile.server
    depends_on:
      pg:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "3000:80"
  pg:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pg-data:/var/lib/postgresql/data
  redis:
    image: redis:latest
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    volumes:
      - redis-data:/data

volumes:
  pg-data:
    external: true
    name: da6044db31cae4a77873422d2eb37da0ac6568bfb898d5efbfa05ca268e834ae
  redis-data:
    external: true
    name: 0774945432b915ad6145ae6fe86723cf867fb915ef31d5a6c7dbbf118e2cb087

# apk add curl
# docker compose up -d